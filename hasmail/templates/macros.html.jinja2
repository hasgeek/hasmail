{% macro sidebar(campaign, recipients, active=none) %}
  <div class="list-group list-group-discreet {#- nav nav-pills nav-stacked nav-pills-filling nav-point-right -#}">
    <a class="list-group-item {%- if active == 't' %} active{% endif %}" href="{{ campaign.url_for('template') }}"><i class="fa fa-fw fa-pencil"></i>
      {% trans %}Write email{% endtrans %}</a>
    {%- if recipients %}{%- if recipients.count() > 1000 %}
      <span class="list-group-item"><i class="fa fa-fw fa-users"></i> Hidden</span>
    {%- else %}{% for r in recipients %}
      <a class="list-group-item {%- if active == r %} active{% endif %}" href="{{ r.url_for() }}">
        {%- if r.rendered_text -%}
          <i class="fa fa-fw fa-send"></i>
        {%- elif r.draft -%}
          <i class="fa fa-fw fa-envelope"></i>
        {%- else %}
          <i class="fa fa-fw fa-envelope-o"></i>
        {%- endif %}
        {{ r.fullname }}
      </a>
    {% endfor %}{% endif %}{% endif %}
  </div>
{% endmacro %}

{% macro report_sidebar(campaign, recipients, active=none, count=0) %}
  <div class="list-group list-group-discreet {#- nav nav-pills nav-stacked nav-pills-filling nav-point-right -#}">
    <a class="list-group-item {%- if active == 't' %} active{% endif %}" href="{{ campaign.url_for('report') }}"><i class="fa fa-fw fa-bar-chart-o"></i>
      {% trans %}View report{% endtrans %}</a>
    {%- if recipients %}{%- if count > 1000 %}
      <span class="list-group-item"><i class="fa fa-fw fa-users"></i> Hidden</span>
    {%- else %}{% for r in recipients %}
      <a class="list-group-item {%- if active == r %} active{% endif %}" href="{{ r.url_for('report') }}">
        {%- if r.rsvp == 'Y' -%}
          <i class="fa fa-fw fa-star"></i>
        {%- elif r.rsvp == 'N' -%}
          <i class="fa fa-fw fa-star-o"></i>
        {%- elif r.rsvp == 'M' -%}
          <i class="fa fa-fw fa-star-half-o"></i>
        {%- elif r.opened -%}
          <i class="fa fa-fw fa-eye"></i>
        {%- elif r.rendered_text -%}
          <i class="fa fa-fw fa-send"></i>
        {%- else %}
          <i class="fa fa-fw fa-envelope-o"></i>
        {%- endif %}
        {{ r.fullname }}
      </a>
    {% endfor %}{% endif %}{% endif %}
  </div>
{% endmacro %}

{% macro template_form(form) %}
  <form id="draft" method="POST" accept-charset="UTF-8">
    <input type="hidden" name="form.id" value="draft">
    {{ form.hidden_tag() }}
    <div class="page-header">
      {%- if not form.revision_id.data %}
        {{ form.subject(class="field-subject unstyled", placeholder="Subject", autofocus=true) }}
      {%- else %}
        {{ form.subject(class="field-subject unstyled", placeholder="Subject") }}
      {%- endif %}
    </div>
    <div class="row">
      <div class="col-sm-6 col-md-6" id="templatehalf">
        {%- if not form.revision_id.data %}
          {{ form.template(class="unstyled hidden") }}
        {%- else %}
          {{ form.template(class="unstyled hidden", autofocus=true) }}
        {%- endif %}
      </div>
      <div class="col-sm-6 col-md-6" id="preview">
      </div>
    </div>
  </form>
{% endmacro %}

{% macro template_editor() %}
  <script type="text/javascript">
    $(function() {
      {%- raw %}
      var mustacheOverlay = {
        token: function(stream, state) {
          var ch;
          if (stream.match("{{")) {
            while ((ch = stream.next()) != null)
              if (ch == "}" && stream.next() == "}") break;
            stream.eat("}");
            return "mustache";
          }
          while (stream.next() != null && !stream.match("{{", false)) {}
          return null;
        }
      };
      {%- endraw %}

      var delay;
      var editor = CodeMirror.fromTextArea(document.getElementById("template"),
        { mode: 'gfm',
          lineNumbers: false,
          theme: "default",
          lineWrapping: true,
          viewportMargin: Infinity,
          autoCloseBrackets: true,
          indentWithTabs: false,
          indentUnit: 1,
          tabSize: 1,
          extraKeys: {
            "Enter": "newlineAndIndentContinueMarkdownList",
            "Tab": false,
            "Shift-Tab": false,
            "Home": "goLineLeft",
            "End": "goLineRight",
            "Cmd-Left": "goLineLeft",
            "Cmd-Right": "goLineRight"
          }
        }
      );
      $("#template").removeClass('hidden');
      editor.addOverlay(mustacheOverlay);
      editor.on('change', function(){
        clearTimeout(delay);
        delay = setTimeout(updatePreview, 300);
      });
      $("#subject").on('change', function() {
        clearTimeout(delay);
        delay = setTimeout(updatePreview, 300);
      });
      function updatePreview() {
        editor.save();
        $("#draft").ajaxSubmit({
          dataType: 'json',
          success: function(r) {
            $("#preview").html(r.preview);
            $("#draft input[name='form_nonce']").val(r.form_nonce);
          },
        });
      }
      setTimeout(updatePreview, 300);
      $("#contentpane").on('click', function(e) {
        if (e.target == this) {
          editor.focus();
        }
      });
    });
  </script>
{% endmacro %}
